{"version":3,"sources":["components/Header.tsx","components/EditForm.tsx","components/context/appContext.ts","helpers/getData.ts","components/ValidateDocument.tsx","hooks/useFetch.tsx","Constans/appURLS.ts","components/MasterForm.tsx","App.tsx","index.tsx"],"names":["Header","className","typeDocuments","label","value","AddressForm","Grid","container","spacing","item","xs","sm","InputLabel","Select","required","labelId","fullWidth","id","map","MenuItem","TextField","name","type","autoComplete","FormControlLabel","control","Checkbox","color","direction","Button","variant","Context","React","createContext","Provider","getData","a","url","fetch","response","json","ValidateDocument","useContext","isValid","setIsValid","useState","setUrl","setId","data","isMounted","useRef","loading","error","state","setstate","useEffect","current","res","getInfo","useFetch","CircularProgress","onChange","target","justify","onClick","MasterForm","Container","maxWidth","Typography","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.54feefe8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <div className=\"app__header\">\r\n      <div className=\"app__header--project-name\"></div>\r\n    </div>\r\n  );\r\n};\r\n","import * as React from 'react';\r\n\r\nimport {\r\n  Button,\r\n  MenuItem,\r\n  Select,\r\n  InputLabel,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  TextField,\r\n  Grid,\r\n} from '@material-ui/core';\r\n\r\nconst typeDocuments = [\r\n  { label: 'Cédula', value: 'C' },\r\n  { label: 'NIT', value: 'NIT' },\r\n  { label: 'Cédula extrangería', value: 'CE' },\r\n  { label: 'Tarjeta de identidad', value: 'TI' },\r\n];\r\n\r\nexport default function AddressForm() {\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12} sm={6}>\r\n        <InputLabel>Identification Type</InputLabel>\r\n        <Select required labelId=\"label\" fullWidth id=\"select\" value={'C'}>\r\n          {typeDocuments.map(({ label, value }: any) => (\r\n            <MenuItem value={value}>{label}</MenuItem>\r\n          ))}\r\n        </Select>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={6}>\r\n        <TextField\r\n          required\r\n          id=\"identification\"\r\n          name=\"identification\"\r\n          label=\"Identification number\"\r\n          type=\"number\"\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={6}>\r\n        <TextField\r\n          required\r\n          id=\"companyName\"\r\n          name=\"companyName\"\r\n          label=\"Company name\"\r\n          fullWidth\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={6}>\r\n        <TextField\r\n          required\r\n          id=\"firstName\"\r\n          name=\"firstName\"\r\n          label=\"First name\"\r\n          fullWidth\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextField\r\n          required\r\n          id=\"secondName\"\r\n          name=\"secondName\"\r\n          label=\"Second Name\"\r\n          fullWidth\r\n          autoComplete=\"family-name\"\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={6}>\r\n        <TextField\r\n          required\r\n          id=\"firstLastName\"\r\n          name=\"firstLastName\"\r\n          label=\"First last name\"\r\n          fullWidth\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={6}>\r\n        <TextField\r\n          required\r\n          id=\"secondLastName\"\r\n          name=\"secondLastName\"\r\n          label=\"Second last name\"\r\n          fullWidth\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextField\r\n          required\r\n          id=\"lastName\"\r\n          name=\"lastName\"\r\n          label=\"Last name\"\r\n          fullWidth\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          required\r\n          id=\"email\"\r\n          name=\"email\"\r\n          label=\"E-mail\"\r\n          fullWidth\r\n          autoComplete=\"shipping address-line1\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              color=\"secondary\"\r\n              name=\"autorizeSendMessagesCellphone\"\r\n              value=\"yes\"\r\n            />\r\n          }\r\n          label=\"I authorize the sending of messages to the cell phone provided\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              color=\"secondary\"\r\n              name=\"autorizeSendMessagesEmail\"\r\n              value=\"yes\"\r\n            />\r\n          }\r\n          label=\"I authorize messages to be sent to the following e-mail address\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={8} direction=\"column\"></Grid>\r\n      <Grid item xs={4} sm={3}>\r\n        <Button variant=\"outlined\" color=\"primary\">\r\n          Enviar\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nconst Context = React.createContext({});\r\n\r\nexport const Provider = Context.Provider;\r\n\r\nexport default Context;\r\n","export const getPostData = async (url = '', data: any) => {\r\n  try {\r\n    const response = await fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      redirect: 'follow',\r\n      referrerPolicy: 'no-referrer',\r\n      body: JSON.stringify(data),\r\n    });\r\n    return response.json();\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const getData = async (url = '') => {\r\n  try {\r\n    const response = await fetch(url);\r\n    return response.json();\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n","import React, { useContext, useState } from 'react';\r\nimport {\r\n  Button,\r\n  Grid,\r\n  InputLabel,\r\n  TextField,\r\n  CircularProgress,\r\n} from '@material-ui/core';\r\nimport Context from './context/appContext';\r\nimport { useFetch } from '../hooks/useFetch';\r\nimport { URLS } from '../Constans/appURLS';\r\n\r\nexport const ValidateDocument = () => {\r\n  const { isValid, setIsValid }: any = useContext(Context);\r\n\r\n  const [url, setUrl] = useState('');\r\n  const [id, setId] = useState('');\r\n\r\n  const { data, loading }: any = useFetch(url);\r\n\r\n  const handleInputClick = () => {\r\n    setUrl(`${URLS().getValidCompany}${id}`);\r\n  };\r\n\r\n  return loading ? (\r\n    <CircularProgress />\r\n  ) : (\r\n\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <InputLabel>Type NIT: </InputLabel>\r\n        <TextField\r\n          required\r\n          onChange={({ target }) => {\r\n            setId(target.value);\r\n            setUrl('');\r\n          }}\r\n          id=\"identification\"\r\n          name=\"identification\"\r\n          label=\"NIT\"\r\n          type=\"number\"\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} justify={'flex-end'}>\r\n        <Button onClick={handleInputClick} variant=\"outlined\" color=\"primary\">\r\n          Enviar\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport { getData } from '../helpers/getData';\r\n\r\nexport const useFetch = (url: string, data?: any, type?: string) => {\r\n  const isMounted = useRef(true);\r\n\r\n  const [state, setstate] = useState({\r\n    data: null,\r\n    loading: true,\r\n    error: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      isMounted.current = false;\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getInfo = async () => {\r\n      try {\r\n        const res = await getData(url);\r\n\r\n        if (isMounted.current) {\r\n          setstate({ data: res, loading: false, error: null });\r\n        }\r\n      } catch (error) {}\r\n    };\r\n\r\n    getInfo();\r\n  }, [url]);\r\n\r\n  return {\r\n    state,\r\n  };\r\n};\r\n","export const URLS = () => {\r\n  return {\r\n    getValidCompany: 'https://webapireactcrud.azurewebsites.net/api/DCompany/',\r\n  };\r\n};\r\n","import React, { useState, useContext } from 'react';\r\nimport { Container, Typography } from '@material-ui/core';\r\nimport EditForm from './EditForm';\r\nimport { ValidateDocument } from './ValidateDocument';\r\nimport Context from './context/appContext';\r\n\r\nexport const MasterForm = () => {\r\n  const { isValid }: any = useContext(Context);\r\n\r\n  return (\r\n    <Container maxWidth={'sm'}>\r\n      <Typography variant={'h4'}>CRUD Company</Typography>\r\n      {isValid ? <EditForm /> : <ValidateDocument />}\r\n    </Container>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\n\nimport { Header } from './components/Header';\nimport { MasterForm } from './components/MasterForm';\nimport { Provider } from './components/context/appContext';\nimport './App.css';\n\nfunction App() {\n  const [isValid, setIsValid] = useState(false);\n\n  return (\n    <Provider value={{ isValid, setIsValid }}>\n      <div className=\"App\">\n        <Header></Header>\n        <MasterForm></MasterForm>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n\n  document.getElementById('root')\n);\n"],"sourceRoot":""}